{"version":3,"sources":["compat.scss","compat.css","../node_modules/bootstrap/scss/mixins/_breakpoints.scss","../node_modules/bootstrap/scss/_grid.scss","../node_modules/bootstrap/scss/mixins/_grid.scss"],"names":[],"mappings":"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","file":"blocks.compat.build.css","sourcesContent":["/**\n * #.# Styles\n *\n * CSS for Frontend.\n */\n\n@use \"sass:list\";\n@use \"sass:map\";\n\n@import \"./vars\";\n\n@import \"../node_modules/bootstrap/scss/functions\";\n@import \"../node_modules/bootstrap/scss/variables\";\n@import \"../node_modules/bootstrap/scss/mixins\";\n\n@mixin make-row($gutter: $grid-gutter-width) {\n\tmargin-right: calc(#{$gutter} / -2);\n\tmargin-left: calc(#{$gutter} / -2);\n}\n\n@mixin make-col-ready($gutter: $grid-gutter-width) {\n\tpadding-right: calc(#{$gutter} / 2);\n\tpadding-left: calc(#{$gutter} / 2);\n}\n\n@supports not (top: var(--x)) {\n\t// Single container class with breakpoint max-widths\n\t.container,\n  // 100% wide container at all breakpoints\n\t.container-fluid {\n\t\tpadding-right: calc(#{$grid-gutter-width} / 2);\n\t\tpadding-left: calc(#{$grid-gutter-width} / 2);\n\t}\n\n\t// Responsive containers that are 100% wide until a breakpoint\n\t@each $breakpoint, $container-max-width in $container-max-widths {\n\t\t.container-#{$breakpoint} {\n\t\t\t@extend .container-fluid;\n\n\t\t\t@include media-breakpoint-up($breakpoint) {\n\t\t\t\t%responsive-container-#{$breakpoint} {\n\t\t\t\t\tmax-width: $container-max-width;\n\t\t\t\t}\n\t\t\t\t// Extend each breakpoint which is smaller or equal to the current breakpoint\n\t\t\t\t$extend-breakpoint: true;\n\t\t\t\t@each $name, $width in $grid-breakpoints {\n\t\t\t\t\t@if ($extend-breakpoint) {\n\t\t\t\t\t\t.container#{breakpoint-infix($name, $grid-breakpoints)} {\n\t\t\t\t\t\t\t@extend %responsive-container-#{$breakpoint};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Once the current breakpoint is reached, stop extending\n\t\t\t\t\t\t@if ($breakpoint == $name) {\n\t\t\t\t\t\t\t$extend-breakpoint: false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t@import \"../node_modules/bootstrap/scss/grid\";\n\n\t.row.vertical-gutters {\n\t\tmargin-top: calc(#{$grid-gutter-width} / -2);\n\t\tmargin-bottom: calc(#{$grid-gutter-width} / -2);\n\n\t\t> .col,\n\t\t> [class*=\"col-\"] {\n\t\t\tpadding-top: calc(#{$grid-gutter-width} / 2);\n\t\t\tpadding-bottom: calc(#{$grid-gutter-width} / 2);\n\t\t}\n\t}\n\n\t$container-classes: (\".container-fluid\");\n\t@each $breakpoint in map.keys($grid-breakpoints) {\n\t\t$container-classes: list.append(\n\t\t\t$container-classes,\n\t\t\t\".container#{breakpoint-infix($breakpoint)}\",\n\t\t\t$separator: comma\n\t\t);\n\t}\n\n\t.contain-inset-vert:is(#{$container-classes}) {\n\t\tpadding-top: calc(#{$grid-gutter-width} / 2);\n\t\tpadding-bottom: calc(#{$grid-gutter-width} / 2);\n\t}\n\n\t.contain-inset-wide:is(#{$container-classes}) {\n\t\tpadding-left: $grid-gutter-width;\n\t\tpadding-right: $grid-gutter-width;\n\n\t\t&.contain-inset-vert {\n\t\t\tpadding-top: $grid-gutter-width;\n\t\t\tpadding-bottom: $grid-gutter-width;\n\t\t}\n\t}\n}\n","/**\n * #.# Styles\n *\n * CSS for Frontend.\n */\n/**\n * #.# Variables\n *\n * Can include things like variables and mixins\n * that are used across the project.\n*/\n@supports not (top: var(--x)) {\n  .container,\n  .container-fluid,\n  .container-6xl,\n  .container-5xl,\n  .container-xxxxl,\n  .container-xxxl,\n  .container-xxl,\n  .container-xl,\n  .container-lg,\n  .container-md,\n  .container-sm {\n    padding-right: calc(1.875rem / 2);\n    padding-left: calc(1.875rem / 2);\n  }\n  @media (min-width: 36em) {\n    .container-sm .container-sm, .container-sm .container {\n      max-width: 33.75rem;\n    }\n  }\n  @media (min-width: 48em) {\n    .container-md .container-md, .container-md .container-sm, .container-md .container {\n      max-width: 45rem;\n    }\n  }\n  @media (min-width: 62em) {\n    .container-lg .container-lg, .container-lg .container-md, .container-lg .container-sm, .container-lg .container {\n      max-width: 60rem;\n    }\n  }\n  @media (min-width: 75em) {\n    .container-xl .container-xl, .container-xl .container-lg, .container-xl .container-md, .container-xl .container-sm, .container-xl .container {\n      max-width: 71.25rem;\n    }\n  }\n  @media (min-width: 88.75em) {\n    .container-xxl .container-xxl, .container-xxl .container-xl, .container-xxl .container-lg, .container-xxl .container-md, .container-xxl .container-sm, .container-xxl .container {\n      max-width: 82.5rem;\n    }\n  }\n  @media (min-width: 105em) {\n    .container-xxxl .container-xxxl, .container-xxxl .container-xxl, .container-xxxl .container-xl, .container-xxxl .container-lg, .container-xxxl .container-md, .container-xxxl .container-sm, .container-xxxl .container {\n      max-width: 90rem;\n    }\n  }\n  @media (min-width: 118.75em) {\n    .container-xxxxl .container-xxxxl, .container-xxxxl .container-xxxl, .container-xxxxl .container-xxl, .container-xxxxl .container-xl, .container-xxxxl .container-lg, .container-xxxxl .container-md, .container-xxxxl .container-sm, .container-xxxxl .container {\n      max-width: 108.75rem;\n    }\n  }\n  .container-5xl .container-xxxxl, .container-5xl .container-xxxl, .container-5xl .container-xxl, .container-5xl .container-xl, .container-5xl .container-lg, .container-5xl .container-md, .container-5xl .container-sm, .container-5xl .container {\n    max-width: 146.25rem;\n  }\n  .container-6xl .container-xxxxl, .container-6xl .container-xxxl, .container-6xl .container-xxl, .container-6xl .container-xl, .container-6xl .container-lg, .container-6xl .container-md, .container-6xl .container-sm, .container-6xl .container {\n    max-width: 225rem;\n  }\n  .row {\n    margin-right: calc(1.875rem / -2);\n    margin-left: calc(1.875rem / -2);\n  }\n  .row > * {\n    padding-right: calc(1.875rem / 2);\n    padding-left: calc(1.875rem / 2);\n  }\n  .col {\n    flex: 1 0 0%;\n  }\n  .row-cols-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-3 {\n    margin-left: 25%;\n  }\n  .offset-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-6 {\n    margin-left: 50%;\n  }\n  .offset-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-9 {\n    margin-left: 75%;\n  }\n  .offset-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-11 {\n    margin-left: 91.66666667%;\n  }\n  @media (min-width: 36em) {\n    .col-sm {\n      flex: 1 0 0%;\n    }\n    .row-cols-sm-auto > * {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-sm-auto {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-sm-1 {\n      flex: 0 0 auto;\n      width: 8.33333333%;\n    }\n    .col-sm-2 {\n      flex: 0 0 auto;\n      width: 16.66666667%;\n    }\n    .col-sm-3 {\n      flex: 0 0 auto;\n      width: 25%;\n    }\n    .col-sm-4 {\n      flex: 0 0 auto;\n      width: 33.33333333%;\n    }\n    .col-sm-5 {\n      flex: 0 0 auto;\n      width: 41.66666667%;\n    }\n    .col-sm-6 {\n      flex: 0 0 auto;\n      width: 50%;\n    }\n    .col-sm-7 {\n      flex: 0 0 auto;\n      width: 58.33333333%;\n    }\n    .col-sm-8 {\n      flex: 0 0 auto;\n      width: 66.66666667%;\n    }\n    .col-sm-9 {\n      flex: 0 0 auto;\n      width: 75%;\n    }\n    .col-sm-10 {\n      flex: 0 0 auto;\n      width: 83.33333333%;\n    }\n    .col-sm-11 {\n      flex: 0 0 auto;\n      width: 91.66666667%;\n    }\n    .col-sm-12 {\n      flex: 0 0 auto;\n      width: 100%;\n    }\n    .offset-sm-0 {\n      margin-left: 0;\n    }\n    .offset-sm-1 {\n      margin-left: 8.33333333%;\n    }\n    .offset-sm-2 {\n      margin-left: 16.66666667%;\n    }\n    .offset-sm-3 {\n      margin-left: 25%;\n    }\n    .offset-sm-4 {\n      margin-left: 33.33333333%;\n    }\n    .offset-sm-5 {\n      margin-left: 41.66666667%;\n    }\n    .offset-sm-6 {\n      margin-left: 50%;\n    }\n    .offset-sm-7 {\n      margin-left: 58.33333333%;\n    }\n    .offset-sm-8 {\n      margin-left: 66.66666667%;\n    }\n    .offset-sm-9 {\n      margin-left: 75%;\n    }\n    .offset-sm-10 {\n      margin-left: 83.33333333%;\n    }\n    .offset-sm-11 {\n      margin-left: 91.66666667%;\n    }\n  }\n  @media (min-width: 48em) {\n    .col-md {\n      flex: 1 0 0%;\n    }\n    .row-cols-md-auto > * {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-md-auto {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-md-1 {\n      flex: 0 0 auto;\n      width: 8.33333333%;\n    }\n    .col-md-2 {\n      flex: 0 0 auto;\n      width: 16.66666667%;\n    }\n    .col-md-3 {\n      flex: 0 0 auto;\n      width: 25%;\n    }\n    .col-md-4 {\n      flex: 0 0 auto;\n      width: 33.33333333%;\n    }\n    .col-md-5 {\n      flex: 0 0 auto;\n      width: 41.66666667%;\n    }\n    .col-md-6 {\n      flex: 0 0 auto;\n      width: 50%;\n    }\n    .col-md-7 {\n      flex: 0 0 auto;\n      width: 58.33333333%;\n    }\n    .col-md-8 {\n      flex: 0 0 auto;\n      width: 66.66666667%;\n    }\n    .col-md-9 {\n      flex: 0 0 auto;\n      width: 75%;\n    }\n    .col-md-10 {\n      flex: 0 0 auto;\n      width: 83.33333333%;\n    }\n    .col-md-11 {\n      flex: 0 0 auto;\n      width: 91.66666667%;\n    }\n    .col-md-12 {\n      flex: 0 0 auto;\n      width: 100%;\n    }\n    .offset-md-0 {\n      margin-left: 0;\n    }\n    .offset-md-1 {\n      margin-left: 8.33333333%;\n    }\n    .offset-md-2 {\n      margin-left: 16.66666667%;\n    }\n    .offset-md-3 {\n      margin-left: 25%;\n    }\n    .offset-md-4 {\n      margin-left: 33.33333333%;\n    }\n    .offset-md-5 {\n      margin-left: 41.66666667%;\n    }\n    .offset-md-6 {\n      margin-left: 50%;\n    }\n    .offset-md-7 {\n      margin-left: 58.33333333%;\n    }\n    .offset-md-8 {\n      margin-left: 66.66666667%;\n    }\n    .offset-md-9 {\n      margin-left: 75%;\n    }\n    .offset-md-10 {\n      margin-left: 83.33333333%;\n    }\n    .offset-md-11 {\n      margin-left: 91.66666667%;\n    }\n  }\n  @media (min-width: 62em) {\n    .col-lg {\n      flex: 1 0 0%;\n    }\n    .row-cols-lg-auto > * {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-lg-auto {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-lg-1 {\n      flex: 0 0 auto;\n      width: 8.33333333%;\n    }\n    .col-lg-2 {\n      flex: 0 0 auto;\n      width: 16.66666667%;\n    }\n    .col-lg-3 {\n      flex: 0 0 auto;\n      width: 25%;\n    }\n    .col-lg-4 {\n      flex: 0 0 auto;\n      width: 33.33333333%;\n    }\n    .col-lg-5 {\n      flex: 0 0 auto;\n      width: 41.66666667%;\n    }\n    .col-lg-6 {\n      flex: 0 0 auto;\n      width: 50%;\n    }\n    .col-lg-7 {\n      flex: 0 0 auto;\n      width: 58.33333333%;\n    }\n    .col-lg-8 {\n      flex: 0 0 auto;\n      width: 66.66666667%;\n    }\n    .col-lg-9 {\n      flex: 0 0 auto;\n      width: 75%;\n    }\n    .col-lg-10 {\n      flex: 0 0 auto;\n      width: 83.33333333%;\n    }\n    .col-lg-11 {\n      flex: 0 0 auto;\n      width: 91.66666667%;\n    }\n    .col-lg-12 {\n      flex: 0 0 auto;\n      width: 100%;\n    }\n    .offset-lg-0 {\n      margin-left: 0;\n    }\n    .offset-lg-1 {\n      margin-left: 8.33333333%;\n    }\n    .offset-lg-2 {\n      margin-left: 16.66666667%;\n    }\n    .offset-lg-3 {\n      margin-left: 25%;\n    }\n    .offset-lg-4 {\n      margin-left: 33.33333333%;\n    }\n    .offset-lg-5 {\n      margin-left: 41.66666667%;\n    }\n    .offset-lg-6 {\n      margin-left: 50%;\n    }\n    .offset-lg-7 {\n      margin-left: 58.33333333%;\n    }\n    .offset-lg-8 {\n      margin-left: 66.66666667%;\n    }\n    .offset-lg-9 {\n      margin-left: 75%;\n    }\n    .offset-lg-10 {\n      margin-left: 83.33333333%;\n    }\n    .offset-lg-11 {\n      margin-left: 91.66666667%;\n    }\n  }\n  @media (min-width: 75em) {\n    .col-xl {\n      flex: 1 0 0%;\n    }\n    .row-cols-xl-auto > * {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-xl-auto {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-xl-1 {\n      flex: 0 0 auto;\n      width: 8.33333333%;\n    }\n    .col-xl-2 {\n      flex: 0 0 auto;\n      width: 16.66666667%;\n    }\n    .col-xl-3 {\n      flex: 0 0 auto;\n      width: 25%;\n    }\n    .col-xl-4 {\n      flex: 0 0 auto;\n      width: 33.33333333%;\n    }\n    .col-xl-5 {\n      flex: 0 0 auto;\n      width: 41.66666667%;\n    }\n    .col-xl-6 {\n      flex: 0 0 auto;\n      width: 50%;\n    }\n    .col-xl-7 {\n      flex: 0 0 auto;\n      width: 58.33333333%;\n    }\n    .col-xl-8 {\n      flex: 0 0 auto;\n      width: 66.66666667%;\n    }\n    .col-xl-9 {\n      flex: 0 0 auto;\n      width: 75%;\n    }\n    .col-xl-10 {\n      flex: 0 0 auto;\n      width: 83.33333333%;\n    }\n    .col-xl-11 {\n      flex: 0 0 auto;\n      width: 91.66666667%;\n    }\n    .col-xl-12 {\n      flex: 0 0 auto;\n      width: 100%;\n    }\n    .offset-xl-0 {\n      margin-left: 0;\n    }\n    .offset-xl-1 {\n      margin-left: 8.33333333%;\n    }\n    .offset-xl-2 {\n      margin-left: 16.66666667%;\n    }\n    .offset-xl-3 {\n      margin-left: 25%;\n    }\n    .offset-xl-4 {\n      margin-left: 33.33333333%;\n    }\n    .offset-xl-5 {\n      margin-left: 41.66666667%;\n    }\n    .offset-xl-6 {\n      margin-left: 50%;\n    }\n    .offset-xl-7 {\n      margin-left: 58.33333333%;\n    }\n    .offset-xl-8 {\n      margin-left: 66.66666667%;\n    }\n    .offset-xl-9 {\n      margin-left: 75%;\n    }\n    .offset-xl-10 {\n      margin-left: 83.33333333%;\n    }\n    .offset-xl-11 {\n      margin-left: 91.66666667%;\n    }\n  }\n  @media (min-width: 88.75em) {\n    .col-xxl {\n      flex: 1 0 0%;\n    }\n    .row-cols-xxl-auto > * {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-xxl-auto {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-xxl-1 {\n      flex: 0 0 auto;\n      width: 8.33333333%;\n    }\n    .col-xxl-2 {\n      flex: 0 0 auto;\n      width: 16.66666667%;\n    }\n    .col-xxl-3 {\n      flex: 0 0 auto;\n      width: 25%;\n    }\n    .col-xxl-4 {\n      flex: 0 0 auto;\n      width: 33.33333333%;\n    }\n    .col-xxl-5 {\n      flex: 0 0 auto;\n      width: 41.66666667%;\n    }\n    .col-xxl-6 {\n      flex: 0 0 auto;\n      width: 50%;\n    }\n    .col-xxl-7 {\n      flex: 0 0 auto;\n      width: 58.33333333%;\n    }\n    .col-xxl-8 {\n      flex: 0 0 auto;\n      width: 66.66666667%;\n    }\n    .col-xxl-9 {\n      flex: 0 0 auto;\n      width: 75%;\n    }\n    .col-xxl-10 {\n      flex: 0 0 auto;\n      width: 83.33333333%;\n    }\n    .col-xxl-11 {\n      flex: 0 0 auto;\n      width: 91.66666667%;\n    }\n    .col-xxl-12 {\n      flex: 0 0 auto;\n      width: 100%;\n    }\n    .offset-xxl-0 {\n      margin-left: 0;\n    }\n    .offset-xxl-1 {\n      margin-left: 8.33333333%;\n    }\n    .offset-xxl-2 {\n      margin-left: 16.66666667%;\n    }\n    .offset-xxl-3 {\n      margin-left: 25%;\n    }\n    .offset-xxl-4 {\n      margin-left: 33.33333333%;\n    }\n    .offset-xxl-5 {\n      margin-left: 41.66666667%;\n    }\n    .offset-xxl-6 {\n      margin-left: 50%;\n    }\n    .offset-xxl-7 {\n      margin-left: 58.33333333%;\n    }\n    .offset-xxl-8 {\n      margin-left: 66.66666667%;\n    }\n    .offset-xxl-9 {\n      margin-left: 75%;\n    }\n    .offset-xxl-10 {\n      margin-left: 83.33333333%;\n    }\n    .offset-xxl-11 {\n      margin-left: 91.66666667%;\n    }\n  }\n  @media (min-width: 105em) {\n    .col-xxxl {\n      flex: 1 0 0%;\n    }\n    .row-cols-xxxl-auto > * {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-xxxl-auto {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-xxxl-1 {\n      flex: 0 0 auto;\n      width: 8.33333333%;\n    }\n    .col-xxxl-2 {\n      flex: 0 0 auto;\n      width: 16.66666667%;\n    }\n    .col-xxxl-3 {\n      flex: 0 0 auto;\n      width: 25%;\n    }\n    .col-xxxl-4 {\n      flex: 0 0 auto;\n      width: 33.33333333%;\n    }\n    .col-xxxl-5 {\n      flex: 0 0 auto;\n      width: 41.66666667%;\n    }\n    .col-xxxl-6 {\n      flex: 0 0 auto;\n      width: 50%;\n    }\n    .col-xxxl-7 {\n      flex: 0 0 auto;\n      width: 58.33333333%;\n    }\n    .col-xxxl-8 {\n      flex: 0 0 auto;\n      width: 66.66666667%;\n    }\n    .col-xxxl-9 {\n      flex: 0 0 auto;\n      width: 75%;\n    }\n    .col-xxxl-10 {\n      flex: 0 0 auto;\n      width: 83.33333333%;\n    }\n    .col-xxxl-11 {\n      flex: 0 0 auto;\n      width: 91.66666667%;\n    }\n    .col-xxxl-12 {\n      flex: 0 0 auto;\n      width: 100%;\n    }\n    .offset-xxxl-0 {\n      margin-left: 0;\n    }\n    .offset-xxxl-1 {\n      margin-left: 8.33333333%;\n    }\n    .offset-xxxl-2 {\n      margin-left: 16.66666667%;\n    }\n    .offset-xxxl-3 {\n      margin-left: 25%;\n    }\n    .offset-xxxl-4 {\n      margin-left: 33.33333333%;\n    }\n    .offset-xxxl-5 {\n      margin-left: 41.66666667%;\n    }\n    .offset-xxxl-6 {\n      margin-left: 50%;\n    }\n    .offset-xxxl-7 {\n      margin-left: 58.33333333%;\n    }\n    .offset-xxxl-8 {\n      margin-left: 66.66666667%;\n    }\n    .offset-xxxl-9 {\n      margin-left: 75%;\n    }\n    .offset-xxxl-10 {\n      margin-left: 83.33333333%;\n    }\n    .offset-xxxl-11 {\n      margin-left: 91.66666667%;\n    }\n  }\n  @media (min-width: 118.75em) {\n    .col-xxxxl {\n      flex: 1 0 0%;\n    }\n    .row-cols-xxxxl-auto > * {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-xxxxl-auto {\n      flex: 0 0 auto;\n      width: auto;\n    }\n    .col-xxxxl-1 {\n      flex: 0 0 auto;\n      width: 8.33333333%;\n    }\n    .col-xxxxl-2 {\n      flex: 0 0 auto;\n      width: 16.66666667%;\n    }\n    .col-xxxxl-3 {\n      flex: 0 0 auto;\n      width: 25%;\n    }\n    .col-xxxxl-4 {\n      flex: 0 0 auto;\n      width: 33.33333333%;\n    }\n    .col-xxxxl-5 {\n      flex: 0 0 auto;\n      width: 41.66666667%;\n    }\n    .col-xxxxl-6 {\n      flex: 0 0 auto;\n      width: 50%;\n    }\n    .col-xxxxl-7 {\n      flex: 0 0 auto;\n      width: 58.33333333%;\n    }\n    .col-xxxxl-8 {\n      flex: 0 0 auto;\n      width: 66.66666667%;\n    }\n    .col-xxxxl-9 {\n      flex: 0 0 auto;\n      width: 75%;\n    }\n    .col-xxxxl-10 {\n      flex: 0 0 auto;\n      width: 83.33333333%;\n    }\n    .col-xxxxl-11 {\n      flex: 0 0 auto;\n      width: 91.66666667%;\n    }\n    .col-xxxxl-12 {\n      flex: 0 0 auto;\n      width: 100%;\n    }\n    .offset-xxxxl-0 {\n      margin-left: 0;\n    }\n    .offset-xxxxl-1 {\n      margin-left: 8.33333333%;\n    }\n    .offset-xxxxl-2 {\n      margin-left: 16.66666667%;\n    }\n    .offset-xxxxl-3 {\n      margin-left: 25%;\n    }\n    .offset-xxxxl-4 {\n      margin-left: 33.33333333%;\n    }\n    .offset-xxxxl-5 {\n      margin-left: 41.66666667%;\n    }\n    .offset-xxxxl-6 {\n      margin-left: 50%;\n    }\n    .offset-xxxxl-7 {\n      margin-left: 58.33333333%;\n    }\n    .offset-xxxxl-8 {\n      margin-left: 66.66666667%;\n    }\n    .offset-xxxxl-9 {\n      margin-left: 75%;\n    }\n    .offset-xxxxl-10 {\n      margin-left: 83.33333333%;\n    }\n    .offset-xxxxl-11 {\n      margin-left: 91.66666667%;\n    }\n  }\n  .row.vertical-gutters {\n    margin-top: calc(1.875rem / -2);\n    margin-bottom: calc(1.875rem / -2);\n  }\n  .row.vertical-gutters > .col,\n  .row.vertical-gutters > [class*=col-] {\n    padding-top: calc(1.875rem / 2);\n    padding-bottom: calc(1.875rem / 2);\n  }\n  .contain-inset-vert:is(.container-fluid, .container-sm, .container-md, .container-lg, .container-xl, .container-xxl, .container-xxxl, .container-xxxxl, .container-5xl, .container-6xl, .container) {\n    padding-top: calc(1.875rem / 2);\n    padding-bottom: calc(1.875rem / 2);\n  }\n  .contain-inset-wide:is(.container-fluid, .container-sm, .container-md, .container-lg, .container-xl, .container-xxl, .container-xxxl, .container-xxxxl, .container-5xl, .container-6xl, .container) {\n    padding-left: 1.875rem;\n    padding-right: 1.875rem;\n  }\n  .contain-inset-wide:is(.container-fluid, .container-sm, .container-md, .container-lg, .container-xl, .container-xxl, .container-xxxl, .container-xxxxl, .container-5xl, .container-6xl, .container).contain-inset-vert {\n    padding-top: 1.875rem;\n    padding-bottom: 1.875rem;\n  }\n}","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// Row\n//\n// Rows contain your columns.\n\n@if $enable-grid-classes {\n  .row {\n    @include make-row();\n\n    > * {\n      @include make-col-ready();\n    }\n  }\n}\n\n@if $enable-cssgrid {\n  .grid {\n    display: grid;\n    grid-template-rows: repeat(var(--#{$prefix}rows, 1), 1fr);\n    grid-template-columns: repeat(var(--#{$prefix}columns, #{$grid-columns}), 1fr);\n    gap: var(--#{$prefix}gap, #{$grid-gutter-width});\n\n    @include make-cssgrid();\n  }\n}\n\n\n// Columns\n//\n// Common styles for small and large grid columns\n\n@if $enable-grid-classes {\n  @include make-grid-columns();\n}\n","// Grid system\n//\n// Generate semantic grid columns with these mixins.\n\n@mixin make-row($gutter: $grid-gutter-width) {\n  --#{$prefix}gutter-x: #{$gutter};\n  --#{$prefix}gutter-y: 0;\n  display: flex;\n  flex-wrap: wrap;\n  // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed\n  margin-top: calc(-1 * var(--#{$prefix}gutter-y)); // stylelint-disable-line function-disallowed-list\n  margin-right: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n  margin-left: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n}\n\n@mixin make-col-ready() {\n  // Add box sizing if only the grid is loaded\n  box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we set the width\n  // later on to override this initial width.\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid\n  padding-right: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  padding-left: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  margin-top: var(--#{$prefix}gutter-y);\n}\n\n@mixin make-col($size: false, $columns: $grid-columns) {\n  @if $size {\n    flex: 0 0 auto;\n    width: percentage(divide($size, $columns));\n\n  } @else {\n    flex: 1 1 0;\n    max-width: 100%;\n  }\n}\n\n@mixin make-col-auto() {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n@mixin make-col-offset($size, $columns: $grid-columns) {\n  $num: divide($size, $columns);\n  margin-left: if($num == 0, 0, percentage($num));\n}\n\n// Row columns\n//\n// Specify on a parent element(e.g., .row) to force immediate children into NN\n// number of columns. Supports wrapping to new lines, but does not do a Masonry\n// style grid.\n@mixin row-cols($count) {\n  > * {\n    flex: 0 0 auto;\n    width: divide(100%, $count);\n  }\n}\n\n// Framework grid generation\n//\n// Used only by Bootstrap to generate the correct number of grid classes given\n// any value of `$grid-columns`.\n\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n      .col#{$infix} {\n        flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4\n      }\n\n      .row-cols#{$infix}-auto > * {\n        @include make-col-auto();\n      }\n\n      @if $grid-row-columns > 0 {\n        @for $i from 1 through $grid-row-columns {\n          .row-cols#{$infix}-#{$i} {\n            @include row-cols($i);\n          }\n        }\n      }\n\n      .col#{$infix}-auto {\n        @include make-col-auto();\n      }\n\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .col#{$infix}-#{$i} {\n            @include make-col($i, $columns);\n          }\n        }\n\n        // `$columns - 1` because offsetting by the width of an entire row isn't possible\n        @for $i from 0 through ($columns - 1) {\n          @if not ($infix == \"\" and $i == 0) { // Avoid emitting useless .offset-0\n            .offset#{$infix}-#{$i} {\n              @include make-col-offset($i, $columns);\n            }\n          }\n        }\n      }\n\n      // Gutters\n      //\n      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.\n      @each $key, $value in $gutters {\n        .g#{$infix}-#{$key},\n        .gx#{$infix}-#{$key} {\n          --#{$prefix}gutter-x: #{$value};\n        }\n\n        .g#{$infix}-#{$key},\n        .gy#{$infix}-#{$key} {\n          --#{$prefix}gutter-y: #{$value};\n        }\n      }\n    }\n  }\n}\n\n@mixin make-cssgrid($columns: $grid-columns, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .g-col#{$infix}-#{$i} {\n            grid-column: auto / span $i;\n          }\n        }\n\n        // Start with `1` because `0` is and invalid value.\n        // Ends with `$columns - 1` because offsetting by the width of an entire row isn't possible.\n        @for $i from 1 through ($columns - 1) {\n          .g-start#{$infix}-#{$i} {\n            grid-column-start: $i;\n          }\n        }\n      }\n    }\n  }\n}\n"]}